@model DocumentTaskTemplateAddViewModel

<form asp-controller="DocumentTaskTemplates" asp-action="DocumentTaskTemplateAdd" id="formAddDocumentTaskTemplate">
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <div>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="IdDocumentTemplate" class="control-label"></label>
        <div>
            <select asp-for="IdDocumentTemplate" asp-items="ViewBag.DocumentTemplates" class="form-control">
                <option>Alege un Template</option>
            </select>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="Types" class="control-label"></label>
        <a href="javascript:addTaskTemplateType()"><i class="fa fa-2x fa-plus-circle m-l-10" aria-hidden="true"></i></a>
        <div id="containerTaskTemplateTypes"></div>
    </div>

    <input type="button" class="btn btn-primary pull-right" value="Adauga" onclick="onTaskTemplateAdded()">
</form>

<script>
    var indexTypes = 0;
    var userGroups = JSON.parse('@Json.Serialize(ViewBag.UserGroups)'); // Use for typeahead
    var usergroupsNames = [];
    (function () {
        userGroups.forEach(function (element) {
            usergroupsNames.push(element.text);
        });
    })();

    function addTaskTemplateType() {
        $.get("/DocumentTaskTemplates/GetTaskTemplateType", { index: indexTypes }, function (result) {
            $('#containerTaskTemplateTypes').append(result);
            //$(document.getElementById('Types[' + indexTypes + '].Paths')).tagsinput('refresh');
            $(document.getElementById('Types[' + indexTypes + '].Tagit')).tagit({
                availableTags: usergroupsNames,
                beforeTagAdded: function (event, ui) {
                    var parnet = $(this);
                    var indexTagit = $(this).attr("data-index");
                    var tagText = $(ui.tag).text().substring(0, $(ui.tag).text().length - 1);
                    var selectItem = $(userGroups).filter(function (index) {
                        return this.text == tagText;
                    });
                    if (selectItem.length > 0) {
                        var option = $("<option>");
                        $(option).val(selectItem[0].value);
                        $(option).text(selectItem[0].text);
                        $(option).prop("selected", true);
                        $(document.getElementById('Types[' + indexTagit + '].Paths')).append($(option));
                    }
                    else
                        return false;
                },
                beforeTagRemoved: function (event, ui) {
                    var parnet = $(this);
                    var indexTagit = $(this).attr("data-index");
                    var tagText = $(ui.tag).text().substring(0, $(ui.tag).text().length - 1);
                    var selectItem = $(userGroups).filter(function (index) {
                        return this.text == tagText;
                    });
                    $(document.getElementById('Types[' + indexTagit + '].Paths')).find('option[value="' + selectItem[0].value + '"]').remove();
                }

            });
            indexTypes++;
        })
            .fail(function (xhr, textStatus, errorThrown) {
                window.toastr.error(xhr.responseText, 'Error!');
            });
    }

    function onTaskTemplateAdded() {
        $.post("/DocumentTaskTemplates/DocumentTaskTemplateAdd", $('#formAddDocumentTaskTemplate').serialize(), function (result) {
            if (result.message) {
                window.toastr.success(result.message, 'Success');
                refreshTaskTemplates();
            } else
                $("#containerDocumentTaskTemplateAdd").html(result);
        })
        .fail(function (xhr, textStatus, errorThrown) {
            window.toastr.error(xhr.responseText, 'Error!');
        });
    }

    function refreshTaskTemplates() {
        $.get("/DocumentTaskTemplates/GetAllDocumentTaskTemplates", function (result) {
            var select = $('#IdDocumentTaskTemplate');
            select.empty();
            select.append($("<option />").text('Alege un Template Task'));
            $.each(result, function () {
                select.append($("<option />").val(this.value).text(this.text));
            });
            $('#modalAddDocumentTaskTemplate').modal('hide');
        })
        .fail(function (xhr, textStatus, errorThrown) {
            window.toastr.error(xhr.responseText, 'Error!');
        });
    }

</script>